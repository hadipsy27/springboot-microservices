# Database Configuration
#spring.datasource.url=jdbc:mysql://localhost:3306/department_db
#spring.datasource.username=root
#spring.datasource.password=

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update

spring.application.name=DEPARTMENT-SERVICE
#eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

# Config Server with Github Repository
spring.config.import=optional:configserver:http://localhost:8888
management.endpoints.web.exposure.include=*

# Install with docker
# docker pull rabbitmq:3.11.0
# RabbitMq Run
# docker run --rm -it -p 5672:5672 rabbitmq:3.11.0
# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# Then you can update configuration using busrefresh,(fill one port) ex: using department port
# Method: POST
# http://localhost:8080/actuator/busrefresh

# Build jar with maven.
# In Intelij you can click maven and package
# Then run with jar file like this
# java -jar -Dserver.port=8082 "D:\your\folder\springboot-microservices\departement-service\target\departement-service-0.0.1-SNAPSHOT.jar"


# Now if add configuration in Github just run refresh Rest api
# Refresh use case, no restart required after config changes
# Method : POST
# Url : http://localhost:8080/actuator/refresh

# Host & Port Zipkin
spring.zipkin.base-url=http://127.0.0.1:9411/
spring.sleuth.sampler.probability=0.1